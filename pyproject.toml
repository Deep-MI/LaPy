[build-system]
requires = [
    'setuptools >= 61.0.0',
    'numpy>=2',
]
build-backend = 'setuptools.build_meta'

[project]
name = 'lapy'
version = '1.2.0'
description = 'A package for differential geometry on meshes (Laplace, FEM)'
readme = 'README.md'
license = {file = 'LICENSE'}
requires-python = '>=3.9'
authors = [
    {name = 'Martin Reuter', email = 'martin.reuter@dzne.de'},
]
maintainers = [
    {name = 'Martin Reuter', email = 'martin.reuter@dzne.de'},
]
keywords = [
    'python',
    'Laplace',
    'FEM',
    'ShapeDNA',
    'BrainPrint',
    'Triangle Mesh',
    'Tetrahedra Mesh',
    'Geodesics in Heat',
    'Mean Curvature Flow',
]
classifiers = [
    'Operating System :: Microsoft :: Windows',
    'Operating System :: Unix',
    'Operating System :: MacOS',
    'Programming Language :: Python :: 3 :: Only',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    'Natural Language :: English',
    'License :: OSI Approved :: MIT License',
    'Intended Audience :: Science/Research',
]
dependencies = [
    'nibabel',
    'numpy>=1.21',
    'plotly',
    'psutil',
    'scipy!=1.13.0',
]

[project.optional-dependencies]
build = [
    'build',
    'twine',
]
chol = [
    'scikit-sparse',
]
doc = [
    'furo!=2023.8.17',
    'matplotlib',
    'memory-profiler',
    'numpydoc',
    'sphinx!=7.2.*',
    'sphinxcontrib-bibtex',
    'sphinx-copybutton',
    'sphinx-design',
    'sphinx-gallery',
    'sphinx-issues',
    'pypandoc',
    'nbsphinx',
    'IPython', # For syntax highlighting in notebooks
    'ipykernel',
]
style = [
    'bibclean',
    'codespell',
    'pydocstyle[toml]',
    'ruff',
]
test = [
    'pytest',
    'pytest-cov',
    'pytest-timeout',
]
all = [
    'lapy[build]',
    'lapy[chol]',
    'lapy[doc]',
    'lapy[style]',
    'lapy[test]',
]
full = [
    'lapy[all]',
]

[project.urls]
homepage = 'https://Deep-MI.github.io/LaPy/dev/index.html'
documentation = 'https://Deep-MI.github.io/LaPy/dev/index.html'
source = 'https://github.com/Deep-MI/LaPy'
tracker = 'https://github.com/Deep-MI/LaPy/issues'

[project.scripts]
lapy-sys_info = 'lapy.commands.sys_info:run'

[tool.setuptools]
include-package-data = false

[tool.setuptools.packages.find]
include = ['lapy*']
exclude = ['lapy*tests']

[tool.pydocstyle]
convention = 'numpy'
ignore-decorators = '(copy_doc|property|.*setter|.*getter|pyqtSlot|Slot)'
match = '^(?!setup|__init__|test_).*\.py'
match-dir = '^lapy.*'
add_ignore = 'D100,D104,D107'

[tool.ruff]
line-length = 88
extend-exclude = [
    "doc",
    ".github",
    "data",
]

[tool.ruff.lint]
# https://docs.astral.sh/ruff/linter/#rule-selection
select = [
    "E",   # pycodestyle
    "F",   # Pyflakes
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "I",   # isort
    # "SIM", # flake8-simplify
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"examples/*" = ["E501"]   # ignore too long lines in example ipynb

[tool.pytest.ini_options]
minversion = '6.0'
addopts = '--durations 20 --junit-xml=junit-results.xml --verbose'
filterwarnings = []

[tool.coverage.run]
branch = true
cover_pylib = false
omit = [
    '**/__init__.py',
    '**/lapy/_version.py',
    '**/lapy/commands/*',
    '**/tests/**',
]

[tool.coverage.report]
exclude_lines = [
    'pragma: no cover',
    'if __name__ == .__main__.:',
]
precision = 2
